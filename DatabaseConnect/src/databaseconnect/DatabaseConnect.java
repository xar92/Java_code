package databaseconnect;

import java.sql.*;

public class DatabaseConnect {

    public static void main(String[] args) throws ClassNotFoundException {
        // load the sqlite-JDBC driver using the current class loader
        Class.forName("org.sqlite.JDBC");

        Connection connection = null;
        long currTime = System.currentTimeMillis() / 1000L;
        
        try {
            // create a database connection
            connection = DriverManager.getConnection("jdbc:sqlite:C:/sqlite/mytest.db");
            PreparedStatement statement = connection.prepareStatement
                    ("insert into mytable "
                    + "values(null, datetime(?, 'unixepoch', 'localtime'))");
            statement.setLong(1,currTime);
            statement.executeUpdate();
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from mytable");
            String output = "";
            while (rs.next()) {
                output += (rs.getInt("counter")+" "+rs.getString("currDate")+'\n');
          //    System.out.println("Counter = " + rs.getInt("counter"));
          //    System.out.println("currDate = " + rs.getString("currDate"));
            }
            OutputFromDatabase m = new OutputFromDatabase(output);
            m.setVisible(true);
            
        } catch (SQLException e) {
            // if the error message is "out of memory", 
            // it probably means no database file is found
            System.err.println(e.getMessage());
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                // connection close failed.
                System.err.println(e);
            }
        }
    }
}

 class OutputFromDatabase extends javax.swing.JFrame {

    /**
     * Creates new form OutpurFromDatabase
     */
    public OutputFromDatabase(String output) {
        initComponents(output);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(String output) {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea(output);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(10);
        jTextArea1.setRows(10);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}


